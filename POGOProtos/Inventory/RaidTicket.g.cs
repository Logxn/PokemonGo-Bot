// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Inventory/RaidTicket.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Inventory {

  /// <summary>Holder for reflection information generated from POGOProtos/Inventory/RaidTicket.proto</summary>
  public static partial class RaidTicketReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Inventory/RaidTicket.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RaidTicketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVQT0dPUHJvdG9zL0ludmVudG9yeS9SYWlkVGlja2V0LnByb3RvEhRQT0dP",
            "UHJvdG9zLkludmVudG9yeRomUE9HT1Byb3Rvcy9JbnZlbnRvcnkvSXRlbS9J",
            "dGVtSWQucHJvdG8aLlBPR09Qcm90b3MvSW52ZW50b3J5L0V4Y2x1c2l2ZVRp",
            "Y2tldEluZm8ucHJvdG8ikwEKClJhaWRUaWNrZXQSEQoJdGlja2V0X2lkGAEg",
            "ASgJEi8KBGl0ZW0YAiABKA4yIS5QT0dPUHJvdG9zLkludmVudG9yeS5JdGVt",
            "Lkl0ZW1JZBJBCg5leGNsdXNpdmVfaW5mbxgEIAEoCzIpLlBPR09Qcm90b3Mu",
            "SW52ZW50b3J5LkV4Y2x1c2l2ZVRpY2tldEluZm9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Inventory.Item.ItemIdReflection.Descriptor, global::POGOProtos.Inventory.ExclusiveTicketInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.RaidTicket), global::POGOProtos.Inventory.RaidTicket.Parser, new[]{ "TicketId", "Item", "ExclusiveInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RaidTicket : pb::IMessage<RaidTicket> {
    private static readonly pb::MessageParser<RaidTicket> _parser = new pb::MessageParser<RaidTicket>(() => new RaidTicket());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaidTicket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.RaidTicketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaidTicket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaidTicket(RaidTicket other) : this() {
      ticketId_ = other.ticketId_;
      item_ = other.item_;
      ExclusiveInfo = other.exclusiveInfo_ != null ? other.ExclusiveInfo.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaidTicket Clone() {
      return new RaidTicket(this);
    }

    /// <summary>Field number for the "ticket_id" field.</summary>
    public const int TicketIdFieldNumber = 1;
    private string ticketId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TicketId {
      get { return ticketId_; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private global::POGOProtos.Inventory.Item.ItemId item_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.Item.ItemId Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "exclusive_info" field.</summary>
    public const int ExclusiveInfoFieldNumber = 4;
    private global::POGOProtos.Inventory.ExclusiveTicketInfo exclusiveInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.ExclusiveTicketInfo ExclusiveInfo {
      get { return exclusiveInfo_; }
      set {
        exclusiveInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaidTicket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaidTicket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TicketId != other.TicketId) return false;
      if (Item != other.Item) return false;
      if (!object.Equals(ExclusiveInfo, other.ExclusiveInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TicketId.Length != 0) hash ^= TicketId.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (exclusiveInfo_ != null) hash ^= ExclusiveInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TicketId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TicketId);
      }
      if (Item != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Item);
      }
      if (exclusiveInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExclusiveInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TicketId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Item);
      }
      if (exclusiveInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExclusiveInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaidTicket other) {
      if (other == null) {
        return;
      }
      if (other.TicketId.Length != 0) {
        TicketId = other.TicketId;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.exclusiveInfo_ != null) {
        if (exclusiveInfo_ == null) {
          exclusiveInfo_ = new global::POGOProtos.Inventory.ExclusiveTicketInfo();
        }
        ExclusiveInfo.MergeFrom(other.ExclusiveInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TicketId = input.ReadString();
            break;
          }
          case 16: {
            item_ = (global::POGOProtos.Inventory.Item.ItemId) input.ReadEnum();
            break;
          }
          case 34: {
            if (exclusiveInfo_ == null) {
              exclusiveInfo_ = new global::POGOProtos.Inventory.ExclusiveTicketInfo();
            }
            input.ReadMessage(exclusiveInfo_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
