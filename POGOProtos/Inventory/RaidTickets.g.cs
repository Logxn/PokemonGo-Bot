// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Inventory/RaidTickets.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Inventory {

  /// <summary>Holder for reflection information generated from POGOProtos/Inventory/RaidTickets.proto</summary>
  public static partial class RaidTicketsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Inventory/RaidTickets.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RaidTicketsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZQT0dPUHJvdG9zL0ludmVudG9yeS9SYWlkVGlja2V0cy5wcm90bxIUUE9H",
            "T1Byb3Rvcy5JbnZlbnRvcnkaJVBPR09Qcm90b3MvSW52ZW50b3J5L1JhaWRU",
            "aWNrZXQucHJvdG8iRAoLUmFpZFRpY2tldHMSNQoLcmFpZF90aWNrZXQYASAD",
            "KAsyIC5QT0dPUHJvdG9zLkludmVudG9yeS5SYWlkVGlja2V0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Inventory.RaidTicketReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.RaidTickets), global::POGOProtos.Inventory.RaidTickets.Parser, new[]{ "RaidTicket" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RaidTickets : pb::IMessage<RaidTickets> {
    private static readonly pb::MessageParser<RaidTickets> _parser = new pb::MessageParser<RaidTickets>(() => new RaidTickets());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaidTickets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.RaidTicketsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaidTickets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaidTickets(RaidTickets other) : this() {
      raidTicket_ = other.raidTicket_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaidTickets Clone() {
      return new RaidTickets(this);
    }

    /// <summary>Field number for the "raid_ticket" field.</summary>
    public const int RaidTicketFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.RaidTicket> _repeated_raidTicket_codec
        = pb::FieldCodec.ForMessage(10, global::POGOProtos.Inventory.RaidTicket.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.RaidTicket> raidTicket_ = new pbc::RepeatedField<global::POGOProtos.Inventory.RaidTicket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.RaidTicket> RaidTicket {
      get { return raidTicket_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaidTickets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaidTickets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!raidTicket_.Equals(other.raidTicket_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= raidTicket_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      raidTicket_.WriteTo(output, _repeated_raidTicket_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raidTicket_.CalculateSize(_repeated_raidTicket_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaidTickets other) {
      if (other == null) {
        return;
      }
      raidTicket_.Add(other.raidTicket_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            raidTicket_.AddEntriesFrom(input, _repeated_raidTicket_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
