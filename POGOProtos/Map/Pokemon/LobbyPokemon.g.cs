// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Map/Pokemon/LobbyPokemon.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Map.Pokemon {

  /// <summary>Holder for reflection information generated from POGOProtos/Map/Pokemon/LobbyPokemon.proto</summary>
  public static partial class LobbyPokemonReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Map/Pokemon/LobbyPokemon.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LobbyPokemonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilQT0dPUHJvdG9zL01hcC9Qb2tlbW9uL0xvYmJ5UG9rZW1vbi5wcm90bxIW",
            "UE9HT1Byb3Rvcy5NYXAuUG9rZW1vbhogUE9HT1Byb3Rvcy9FbnVtcy9Qb2tl",
            "bW9uSWQucHJvdG8ibwoMTG9iYnlQb2tlbW9uEgoKAmlkGAEgASgDEi8KCnBv",
            "a2VkZXhfaWQYAiABKA4yGy5QT0dPUHJvdG9zLkVudW1zLlBva2Vtb25JZBIK",
            "CgJjcBgDIAEoBRIWCg5wZXJjZW50X2hlYWx0aBgEIAEoAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Enums.PokemonIdReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Map.Pokemon.LobbyPokemon), global::POGOProtos.Map.Pokemon.LobbyPokemon.Parser, new[]{ "Id", "PokedexId", "Cp", "PercentHealth" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LobbyPokemon : pb::IMessage<LobbyPokemon> {
    private static readonly pb::MessageParser<LobbyPokemon> _parser = new pb::MessageParser<LobbyPokemon>(() => new LobbyPokemon());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyPokemon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Map.Pokemon.LobbyPokemonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyPokemon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyPokemon(LobbyPokemon other) : this() {
      id_ = other.id_;
      pokedexId_ = other.pokedexId_;
      cp_ = other.cp_;
      percentHealth_ = other.percentHealth_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyPokemon Clone() {
      return new LobbyPokemon(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "pokedex_id" field.</summary>
    public const int PokedexIdFieldNumber = 2;
    private global::POGOProtos.Enums.PokemonId pokedexId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Enums.PokemonId PokedexId {
      get { return pokedexId_; }
      set {
        pokedexId_ = value;
      }
    }

    /// <summary>Field number for the "cp" field.</summary>
    public const int CpFieldNumber = 3;
    private int cp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cp {
      get { return cp_; }
      set {
        cp_ = value;
      }
    }

    /// <summary>Field number for the "percent_health" field.</summary>
    public const int PercentHealthFieldNumber = 4;
    private float percentHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentHealth {
      get { return percentHealth_; }
      set {
        percentHealth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyPokemon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyPokemon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PokedexId != other.PokedexId) return false;
      if (Cp != other.Cp) return false;
      if (PercentHealth != other.PercentHealth) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (PokedexId != 0) hash ^= PokedexId.GetHashCode();
      if (Cp != 0) hash ^= Cp.GetHashCode();
      if (PercentHealth != 0F) hash ^= PercentHealth.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (PokedexId != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PokedexId);
      }
      if (Cp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cp);
      }
      if (PercentHealth != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(PercentHealth);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (PokedexId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PokedexId);
      }
      if (Cp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cp);
      }
      if (PercentHealth != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyPokemon other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.PokedexId != 0) {
        PokedexId = other.PokedexId;
      }
      if (other.Cp != 0) {
        Cp = other.Cp;
      }
      if (other.PercentHealth != 0F) {
        PercentHealth = other.PercentHealth;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            pokedexId_ = (global::POGOProtos.Enums.PokemonId) input.ReadEnum();
            break;
          }
          case 24: {
            Cp = input.ReadInt32();
            break;
          }
          case 37: {
            PercentHealth = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
