// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Map/Pokemon/MotivatedPokemon.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Map.Pokemon {

  /// <summary>Holder for reflection information generated from POGOProtos/Map/Pokemon/MotivatedPokemon.proto</summary>
  public static partial class MotivatedPokemonReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Map/Pokemon/MotivatedPokemon.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MotivatedPokemonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1QT0dPUHJvdG9zL01hcC9Qb2tlbW9uL01vdGl2YXRlZFBva2Vtb24ucHJv",
            "dG8SFlBPR09Qcm90b3MuTWFwLlBva2Vtb24aH1BPR09Qcm90b3MvRGF0YS9G",
            "b29kVmFsdWUucHJvdG8aIVBPR09Qcm90b3MvRGF0YS9Qb2tlbW9uRGF0YS5w",
            "cm90byKCAgoQTW90aXZhdGVkUG9rZW1vbhItCgdwb2tlbW9uGAEgASgLMhwu",
            "UE9HT1Byb3Rvcy5EYXRhLlBva2Vtb25EYXRhEhEKCWRlcGxveV9tcxgCIAEo",
            "AxIYChBjcF93aGVuX2RlcGxveWVkGAMgASgFEhYKDm1vdGl2YXRpb25fbm93",
            "GAQgASgBEg4KBmNwX25vdxgFIAEoBRITCgtiZXJyeV92YWx1ZRgGIAEoAhIl",
            "Ch1mZWVkX2Nvb2xkb3duX2R1cmF0aW9uX21pbGxpcxgHIAEoAxIuCgpmb29k",
            "X3ZhbHVlGAggAygLMhouUE9HT1Byb3Rvcy5EYXRhLkZvb2RWYWx1ZWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Data.FoodValueReflection.Descriptor, global::POGOProtos.Data.PokemonDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Map.Pokemon.MotivatedPokemon), global::POGOProtos.Map.Pokemon.MotivatedPokemon.Parser, new[]{ "Pokemon", "DeployMs", "CpWhenDeployed", "MotivationNow", "CpNow", "BerryValue", "FeedCooldownDurationMillis", "FoodValue" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MotivatedPokemon : pb::IMessage<MotivatedPokemon> {
    private static readonly pb::MessageParser<MotivatedPokemon> _parser = new pb::MessageParser<MotivatedPokemon>(() => new MotivatedPokemon());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MotivatedPokemon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Map.Pokemon.MotivatedPokemonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MotivatedPokemon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MotivatedPokemon(MotivatedPokemon other) : this() {
      Pokemon = other.pokemon_ != null ? other.Pokemon.Clone() : null;
      deployMs_ = other.deployMs_;
      cpWhenDeployed_ = other.cpWhenDeployed_;
      motivationNow_ = other.motivationNow_;
      cpNow_ = other.cpNow_;
      berryValue_ = other.berryValue_;
      feedCooldownDurationMillis_ = other.feedCooldownDurationMillis_;
      foodValue_ = other.foodValue_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MotivatedPokemon Clone() {
      return new MotivatedPokemon(this);
    }

    /// <summary>Field number for the "pokemon" field.</summary>
    public const int PokemonFieldNumber = 1;
    private global::POGOProtos.Data.PokemonData pokemon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData Pokemon {
      get { return pokemon_; }
      set {
        pokemon_ = value;
      }
    }

    /// <summary>Field number for the "deploy_ms" field.</summary>
    public const int DeployMsFieldNumber = 2;
    private long deployMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DeployMs {
      get { return deployMs_; }
      set {
        deployMs_ = value;
      }
    }

    /// <summary>Field number for the "cp_when_deployed" field.</summary>
    public const int CpWhenDeployedFieldNumber = 3;
    private int cpWhenDeployed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CpWhenDeployed {
      get { return cpWhenDeployed_; }
      set {
        cpWhenDeployed_ = value;
      }
    }

    /// <summary>Field number for the "motivation_now" field.</summary>
    public const int MotivationNowFieldNumber = 4;
    private double motivationNow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MotivationNow {
      get { return motivationNow_; }
      set {
        motivationNow_ = value;
      }
    }

    /// <summary>Field number for the "cp_now" field.</summary>
    public const int CpNowFieldNumber = 5;
    private int cpNow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CpNow {
      get { return cpNow_; }
      set {
        cpNow_ = value;
      }
    }

    /// <summary>Field number for the "berry_value" field.</summary>
    public const int BerryValueFieldNumber = 6;
    private float berryValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BerryValue {
      get { return berryValue_; }
      set {
        berryValue_ = value;
      }
    }

    /// <summary>Field number for the "feed_cooldown_duration_millis" field.</summary>
    public const int FeedCooldownDurationMillisFieldNumber = 7;
    private long feedCooldownDurationMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FeedCooldownDurationMillis {
      get { return feedCooldownDurationMillis_; }
      set {
        feedCooldownDurationMillis_ = value;
      }
    }

    /// <summary>Field number for the "food_value" field.</summary>
    public const int FoodValueFieldNumber = 8;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.FoodValue> _repeated_foodValue_codec
        = pb::FieldCodec.ForMessage(66, global::POGOProtos.Data.FoodValue.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.FoodValue> foodValue_ = new pbc::RepeatedField<global::POGOProtos.Data.FoodValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.FoodValue> FoodValue {
      get { return foodValue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MotivatedPokemon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MotivatedPokemon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pokemon, other.Pokemon)) return false;
      if (DeployMs != other.DeployMs) return false;
      if (CpWhenDeployed != other.CpWhenDeployed) return false;
      if (MotivationNow != other.MotivationNow) return false;
      if (CpNow != other.CpNow) return false;
      if (BerryValue != other.BerryValue) return false;
      if (FeedCooldownDurationMillis != other.FeedCooldownDurationMillis) return false;
      if(!foodValue_.Equals(other.foodValue_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pokemon_ != null) hash ^= Pokemon.GetHashCode();
      if (DeployMs != 0L) hash ^= DeployMs.GetHashCode();
      if (CpWhenDeployed != 0) hash ^= CpWhenDeployed.GetHashCode();
      if (MotivationNow != 0D) hash ^= MotivationNow.GetHashCode();
      if (CpNow != 0) hash ^= CpNow.GetHashCode();
      if (BerryValue != 0F) hash ^= BerryValue.GetHashCode();
      if (FeedCooldownDurationMillis != 0L) hash ^= FeedCooldownDurationMillis.GetHashCode();
      hash ^= foodValue_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pokemon_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pokemon);
      }
      if (DeployMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DeployMs);
      }
      if (CpWhenDeployed != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CpWhenDeployed);
      }
      if (MotivationNow != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MotivationNow);
      }
      if (CpNow != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CpNow);
      }
      if (BerryValue != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(BerryValue);
      }
      if (FeedCooldownDurationMillis != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FeedCooldownDurationMillis);
      }
      foodValue_.WriteTo(output, _repeated_foodValue_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pokemon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pokemon);
      }
      if (DeployMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeployMs);
      }
      if (CpWhenDeployed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CpWhenDeployed);
      }
      if (MotivationNow != 0D) {
        size += 1 + 8;
      }
      if (CpNow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CpNow);
      }
      if (BerryValue != 0F) {
        size += 1 + 4;
      }
      if (FeedCooldownDurationMillis != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FeedCooldownDurationMillis);
      }
      size += foodValue_.CalculateSize(_repeated_foodValue_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MotivatedPokemon other) {
      if (other == null) {
        return;
      }
      if (other.pokemon_ != null) {
        if (pokemon_ == null) {
          pokemon_ = new global::POGOProtos.Data.PokemonData();
        }
        Pokemon.MergeFrom(other.Pokemon);
      }
      if (other.DeployMs != 0L) {
        DeployMs = other.DeployMs;
      }
      if (other.CpWhenDeployed != 0) {
        CpWhenDeployed = other.CpWhenDeployed;
      }
      if (other.MotivationNow != 0D) {
        MotivationNow = other.MotivationNow;
      }
      if (other.CpNow != 0) {
        CpNow = other.CpNow;
      }
      if (other.BerryValue != 0F) {
        BerryValue = other.BerryValue;
      }
      if (other.FeedCooldownDurationMillis != 0L) {
        FeedCooldownDurationMillis = other.FeedCooldownDurationMillis;
      }
      foodValue_.Add(other.foodValue_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pokemon_ == null) {
              pokemon_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemon_);
            break;
          }
          case 16: {
            DeployMs = input.ReadInt64();
            break;
          }
          case 24: {
            CpWhenDeployed = input.ReadInt32();
            break;
          }
          case 33: {
            MotivationNow = input.ReadDouble();
            break;
          }
          case 40: {
            CpNow = input.ReadInt32();
            break;
          }
          case 53: {
            BerryValue = input.ReadFloat();
            break;
          }
          case 56: {
            FeedCooldownDurationMillis = input.ReadInt64();
            break;
          }
          case 66: {
            foodValue_.AddEntriesFrom(input, _repeated_foodValue_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
