// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Raid/PlayerRaidInfo.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Raid {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Raid/PlayerRaidInfo.proto</summary>
  public static partial class PlayerRaidInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Raid/PlayerRaidInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerRaidInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilQT0dPUHJvdG9zL0RhdGEvUmFpZC9QbGF5ZXJSYWlkSW5mby5wcm90bxIU",
            "UE9HT1Byb3Rvcy5EYXRhLlJhaWQaH1BPR09Qcm90b3MvRGF0YS9SYWlkL1Jh",
            "aWQucHJvdG8igwEKDlBsYXllclJhaWRJbmZvEh0KFXRvdGFsX2NvbXBsZXRl",
            "ZF9yYWlkcxgDIAEoBRInCh90b3RhbF9jb21wbGV0ZWRfbGVnZW5kYXJ5X3Jh",
            "aWRzGAQgASgFEikKBXJhaWRzGAUgAygLMhouUE9HT1Byb3Rvcy5EYXRhLlJh",
            "aWQuUmFpZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Data.Raid.RaidReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Raid.PlayerRaidInfo), global::POGOProtos.Data.Raid.PlayerRaidInfo.Parser, new[]{ "TotalCompletedRaids", "TotalCompletedLegendaryRaids", "Raids" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerRaidInfo : pb::IMessage<PlayerRaidInfo> {
    private static readonly pb::MessageParser<PlayerRaidInfo> _parser = new pb::MessageParser<PlayerRaidInfo>(() => new PlayerRaidInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerRaidInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Raid.PlayerRaidInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRaidInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRaidInfo(PlayerRaidInfo other) : this() {
      totalCompletedRaids_ = other.totalCompletedRaids_;
      totalCompletedLegendaryRaids_ = other.totalCompletedLegendaryRaids_;
      raids_ = other.raids_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRaidInfo Clone() {
      return new PlayerRaidInfo(this);
    }

    /// <summary>Field number for the "total_completed_raids" field.</summary>
    public const int TotalCompletedRaidsFieldNumber = 3;
    private int totalCompletedRaids_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalCompletedRaids {
      get { return totalCompletedRaids_; }
      set {
        totalCompletedRaids_ = value;
      }
    }

    /// <summary>Field number for the "total_completed_legendary_raids" field.</summary>
    public const int TotalCompletedLegendaryRaidsFieldNumber = 4;
    private int totalCompletedLegendaryRaids_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalCompletedLegendaryRaids {
      get { return totalCompletedLegendaryRaids_; }
      set {
        totalCompletedLegendaryRaids_ = value;
      }
    }

    /// <summary>Field number for the "raids" field.</summary>
    public const int RaidsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Raid.Raid> _repeated_raids_codec
        = pb::FieldCodec.ForMessage(42, global::POGOProtos.Data.Raid.Raid.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Raid.Raid> raids_ = new pbc::RepeatedField<global::POGOProtos.Data.Raid.Raid>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Raid.Raid> Raids {
      get { return raids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerRaidInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerRaidInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalCompletedRaids != other.TotalCompletedRaids) return false;
      if (TotalCompletedLegendaryRaids != other.TotalCompletedLegendaryRaids) return false;
      if(!raids_.Equals(other.raids_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalCompletedRaids != 0) hash ^= TotalCompletedRaids.GetHashCode();
      if (TotalCompletedLegendaryRaids != 0) hash ^= TotalCompletedLegendaryRaids.GetHashCode();
      hash ^= raids_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TotalCompletedRaids != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalCompletedRaids);
      }
      if (TotalCompletedLegendaryRaids != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalCompletedLegendaryRaids);
      }
      raids_.WriteTo(output, _repeated_raids_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalCompletedRaids != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalCompletedRaids);
      }
      if (TotalCompletedLegendaryRaids != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalCompletedLegendaryRaids);
      }
      size += raids_.CalculateSize(_repeated_raids_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerRaidInfo other) {
      if (other == null) {
        return;
      }
      if (other.TotalCompletedRaids != 0) {
        TotalCompletedRaids = other.TotalCompletedRaids;
      }
      if (other.TotalCompletedLegendaryRaids != 0) {
        TotalCompletedLegendaryRaids = other.TotalCompletedLegendaryRaids;
      }
      raids_.Add(other.raids_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 24: {
            TotalCompletedRaids = input.ReadInt32();
            break;
          }
          case 32: {
            TotalCompletedLegendaryRaids = input.ReadInt32();
            break;
          }
          case 42: {
            raids_.AddEntriesFrom(input, _repeated_raids_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
