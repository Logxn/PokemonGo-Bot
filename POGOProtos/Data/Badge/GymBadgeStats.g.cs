// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Badge/GymBadgeStats.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Badge {

  /// <summary>Holder for reflection information generated from POGOProtos/Data/Badge/GymBadgeStats.proto</summary>
  public static partial class GymBadgeStatsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Data/Badge/GymBadgeStats.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GymBadgeStatsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilQT0dPUHJvdG9zL0RhdGEvQmFkZ2UvR3ltQmFkZ2VTdGF0cy5wcm90bxIV",
            "UE9HT1Byb3Rvcy5EYXRhLkJhZGdlIpABCg1HeW1CYWRnZVN0YXRzEh4KFnRv",
            "dGFsX3RpbWVfZGVmZW5kZWRfbXMYASABKAQSFwoPbnVtX2JhdHRsZXNfd29u",
            "GAIgASgNEhgKEG51bV9iYXR0bGVzX2xvc3QYBSABKA0SFwoPbnVtX2JlcnJp",
            "ZXNfZmVkGAMgASgNEhMKC251bV9kZXBsb3lzGAQgASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Badge.GymBadgeStats), global::POGOProtos.Data.Badge.GymBadgeStats.Parser, new[]{ "TotalTimeDefendedMs", "NumBattlesWon", "NumBattlesLost", "NumBerriesFed", "NumDeploys" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GymBadgeStats : pb::IMessage<GymBadgeStats> {
    private static readonly pb::MessageParser<GymBadgeStats> _parser = new pb::MessageParser<GymBadgeStats>(() => new GymBadgeStats());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GymBadgeStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Badge.GymBadgeStatsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymBadgeStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymBadgeStats(GymBadgeStats other) : this() {
      totalTimeDefendedMs_ = other.totalTimeDefendedMs_;
      numBattlesWon_ = other.numBattlesWon_;
      numBattlesLost_ = other.numBattlesLost_;
      numBerriesFed_ = other.numBerriesFed_;
      numDeploys_ = other.numDeploys_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymBadgeStats Clone() {
      return new GymBadgeStats(this);
    }

    /// <summary>Field number for the "total_time_defended_ms" field.</summary>
    public const int TotalTimeDefendedMsFieldNumber = 1;
    private ulong totalTimeDefendedMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TotalTimeDefendedMs {
      get { return totalTimeDefendedMs_; }
      set {
        totalTimeDefendedMs_ = value;
      }
    }

    /// <summary>Field number for the "num_battles_won" field.</summary>
    public const int NumBattlesWonFieldNumber = 2;
    private uint numBattlesWon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NumBattlesWon {
      get { return numBattlesWon_; }
      set {
        numBattlesWon_ = value;
      }
    }

    /// <summary>Field number for the "num_battles_lost" field.</summary>
    public const int NumBattlesLostFieldNumber = 5;
    private uint numBattlesLost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NumBattlesLost {
      get { return numBattlesLost_; }
      set {
        numBattlesLost_ = value;
      }
    }

    /// <summary>Field number for the "num_berries_fed" field.</summary>
    public const int NumBerriesFedFieldNumber = 3;
    private uint numBerriesFed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NumBerriesFed {
      get { return numBerriesFed_; }
      set {
        numBerriesFed_ = value;
      }
    }

    /// <summary>Field number for the "num_deploys" field.</summary>
    public const int NumDeploysFieldNumber = 4;
    private uint numDeploys_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NumDeploys {
      get { return numDeploys_; }
      set {
        numDeploys_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GymBadgeStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GymBadgeStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalTimeDefendedMs != other.TotalTimeDefendedMs) return false;
      if (NumBattlesWon != other.NumBattlesWon) return false;
      if (NumBattlesLost != other.NumBattlesLost) return false;
      if (NumBerriesFed != other.NumBerriesFed) return false;
      if (NumDeploys != other.NumDeploys) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalTimeDefendedMs != 0UL) hash ^= TotalTimeDefendedMs.GetHashCode();
      if (NumBattlesWon != 0) hash ^= NumBattlesWon.GetHashCode();
      if (NumBattlesLost != 0) hash ^= NumBattlesLost.GetHashCode();
      if (NumBerriesFed != 0) hash ^= NumBerriesFed.GetHashCode();
      if (NumDeploys != 0) hash ^= NumDeploys.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TotalTimeDefendedMs != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(TotalTimeDefendedMs);
      }
      if (NumBattlesWon != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NumBattlesWon);
      }
      if (NumBerriesFed != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NumBerriesFed);
      }
      if (NumDeploys != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(NumDeploys);
      }
      if (NumBattlesLost != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(NumBattlesLost);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalTimeDefendedMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalTimeDefendedMs);
      }
      if (NumBattlesWon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumBattlesWon);
      }
      if (NumBattlesLost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumBattlesLost);
      }
      if (NumBerriesFed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumBerriesFed);
      }
      if (NumDeploys != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumDeploys);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GymBadgeStats other) {
      if (other == null) {
        return;
      }
      if (other.TotalTimeDefendedMs != 0UL) {
        TotalTimeDefendedMs = other.TotalTimeDefendedMs;
      }
      if (other.NumBattlesWon != 0) {
        NumBattlesWon = other.NumBattlesWon;
      }
      if (other.NumBattlesLost != 0) {
        NumBattlesLost = other.NumBattlesLost;
      }
      if (other.NumBerriesFed != 0) {
        NumBerriesFed = other.NumBerriesFed;
      }
      if (other.NumDeploys != 0) {
        NumDeploys = other.NumDeploys;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TotalTimeDefendedMs = input.ReadUInt64();
            break;
          }
          case 16: {
            NumBattlesWon = input.ReadUInt32();
            break;
          }
          case 24: {
            NumBerriesFed = input.ReadUInt32();
            break;
          }
          case 32: {
            NumDeploys = input.ReadUInt32();
            break;
          }
          case 40: {
            NumBattlesLost = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
