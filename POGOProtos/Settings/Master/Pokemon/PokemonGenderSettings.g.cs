// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/Pokemon/PokemonGenderSettings.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Settings.Master.Pokemon {

  /// <summary>Holder for reflection information generated from POGOProtos/Settings/Master/Pokemon/PokemonGenderSettings.proto</summary>
  public static partial class PokemonGenderSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Settings/Master/Pokemon/PokemonGenderSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PokemonGenderSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj5QT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9Qb2tlbW9uL1Bva2Vtb25H",
            "ZW5kZXJTZXR0aW5ncy5wcm90bxIiUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0",
            "ZXIuUG9rZW1vbiJhChVQb2tlbW9uR2VuZGVyU2V0dGluZ3MSFAoMbWFsZV9w",
            "ZXJjZW50GAEgASgCEhYKDmZlbWFsZV9wZXJjZW50GAIgASgCEhoKEmdlbmRl",
            "cmxlc3NfcGVyY2VudBgDIAEoAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.Master.Pokemon.PokemonGenderSettings), global::POGOProtos.Settings.Master.Pokemon.PokemonGenderSettings.Parser, new[]{ "MalePercent", "FemalePercent", "GenderlessPercent" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PokemonGenderSettings : pb::IMessage<PokemonGenderSettings> {
    private static readonly pb::MessageParser<PokemonGenderSettings> _parser = new pb::MessageParser<PokemonGenderSettings>(() => new PokemonGenderSettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PokemonGenderSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.Master.Pokemon.PokemonGenderSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonGenderSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonGenderSettings(PokemonGenderSettings other) : this() {
      malePercent_ = other.malePercent_;
      femalePercent_ = other.femalePercent_;
      genderlessPercent_ = other.genderlessPercent_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonGenderSettings Clone() {
      return new PokemonGenderSettings(this);
    }

    /// <summary>Field number for the "male_percent" field.</summary>
    public const int MalePercentFieldNumber = 1;
    private float malePercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MalePercent {
      get { return malePercent_; }
      set {
        malePercent_ = value;
      }
    }

    /// <summary>Field number for the "female_percent" field.</summary>
    public const int FemalePercentFieldNumber = 2;
    private float femalePercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FemalePercent {
      get { return femalePercent_; }
      set {
        femalePercent_ = value;
      }
    }

    /// <summary>Field number for the "genderless_percent" field.</summary>
    public const int GenderlessPercentFieldNumber = 3;
    private float genderlessPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GenderlessPercent {
      get { return genderlessPercent_; }
      set {
        genderlessPercent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PokemonGenderSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PokemonGenderSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MalePercent != other.MalePercent) return false;
      if (FemalePercent != other.FemalePercent) return false;
      if (GenderlessPercent != other.GenderlessPercent) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MalePercent != 0F) hash ^= MalePercent.GetHashCode();
      if (FemalePercent != 0F) hash ^= FemalePercent.GetHashCode();
      if (GenderlessPercent != 0F) hash ^= GenderlessPercent.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MalePercent != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(MalePercent);
      }
      if (FemalePercent != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FemalePercent);
      }
      if (GenderlessPercent != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(GenderlessPercent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MalePercent != 0F) {
        size += 1 + 4;
      }
      if (FemalePercent != 0F) {
        size += 1 + 4;
      }
      if (GenderlessPercent != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PokemonGenderSettings other) {
      if (other == null) {
        return;
      }
      if (other.MalePercent != 0F) {
        MalePercent = other.MalePercent;
      }
      if (other.FemalePercent != 0F) {
        FemalePercent = other.FemalePercent;
      }
      if (other.GenderlessPercent != 0F) {
        GenderlessPercent = other.GenderlessPercent;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            MalePercent = input.ReadFloat();
            break;
          }
          case 21: {
            FemalePercent = input.ReadFloat();
            break;
          }
          case 29: {
            GenderlessPercent = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
