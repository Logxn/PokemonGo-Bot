// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/GymBadgeGmtSettings.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Settings.Master {

  /// <summary>Holder for reflection information generated from POGOProtos/Settings/Master/GymBadgeGmtSettings.proto</summary>
  public static partial class GymBadgeGmtSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Settings/Master/GymBadgeGmtSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GymBadgeGmtSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjRQT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9HeW1CYWRnZUdtdFNldHRp",
            "bmdzLnByb3RvEhpQT0dPUHJvdG9zLlNldHRpbmdzLk1hc3RlciL5AQoTR3lt",
            "QmFkZ2VHbXRTZXR0aW5ncxIOCgZ0YXJnZXQYASADKAUSLAokYmF0dGxlX3dp",
            "bm5pbmdfc2NvcmVfcGVyX2RlZmVuZGVyX2NwGAIgASgCEiYKHmd5bV9kZWZl",
            "bmRpbmdfc2NvcmVfcGVyX21pbnV0ZRgDIAEoAhIbChNiZXJyeV9mZWVkaW5n",
            "X3Njb3JlGAQgASgFEhwKFHBva2Vtb25fZGVwbG95X3Njb3JlGAUgASgFEiEK",
            "GXJhaWRfYmF0dGxlX3dpbm5pbmdfc2NvcmUYBiABKAUSHgoWbG9zZV9hbGxf",
            "YmF0dGxlc19zY29yZRgHIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.Master.GymBadgeGmtSettings), global::POGOProtos.Settings.Master.GymBadgeGmtSettings.Parser, new[]{ "Target", "BattleWinningScorePerDefenderCp", "GymDefendingScorePerMinute", "BerryFeedingScore", "PokemonDeployScore", "RaidBattleWinningScore", "LoseAllBattlesScore" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GymBadgeGmtSettings : pb::IMessage<GymBadgeGmtSettings> {
    private static readonly pb::MessageParser<GymBadgeGmtSettings> _parser = new pb::MessageParser<GymBadgeGmtSettings>(() => new GymBadgeGmtSettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GymBadgeGmtSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.Master.GymBadgeGmtSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymBadgeGmtSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymBadgeGmtSettings(GymBadgeGmtSettings other) : this() {
      target_ = other.target_.Clone();
      battleWinningScorePerDefenderCp_ = other.battleWinningScorePerDefenderCp_;
      gymDefendingScorePerMinute_ = other.gymDefendingScorePerMinute_;
      berryFeedingScore_ = other.berryFeedingScore_;
      pokemonDeployScore_ = other.pokemonDeployScore_;
      raidBattleWinningScore_ = other.raidBattleWinningScore_;
      loseAllBattlesScore_ = other.loseAllBattlesScore_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymBadgeGmtSettings Clone() {
      return new GymBadgeGmtSettings(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_target_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> target_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Target {
      get { return target_; }
    }

    /// <summary>Field number for the "battle_winning_score_per_defender_cp" field.</summary>
    public const int BattleWinningScorePerDefenderCpFieldNumber = 2;
    private float battleWinningScorePerDefenderCp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BattleWinningScorePerDefenderCp {
      get { return battleWinningScorePerDefenderCp_; }
      set {
        battleWinningScorePerDefenderCp_ = value;
      }
    }

    /// <summary>Field number for the "gym_defending_score_per_minute" field.</summary>
    public const int GymDefendingScorePerMinuteFieldNumber = 3;
    private float gymDefendingScorePerMinute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GymDefendingScorePerMinute {
      get { return gymDefendingScorePerMinute_; }
      set {
        gymDefendingScorePerMinute_ = value;
      }
    }

    /// <summary>Field number for the "berry_feeding_score" field.</summary>
    public const int BerryFeedingScoreFieldNumber = 4;
    private int berryFeedingScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BerryFeedingScore {
      get { return berryFeedingScore_; }
      set {
        berryFeedingScore_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_deploy_score" field.</summary>
    public const int PokemonDeployScoreFieldNumber = 5;
    private int pokemonDeployScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PokemonDeployScore {
      get { return pokemonDeployScore_; }
      set {
        pokemonDeployScore_ = value;
      }
    }

    /// <summary>Field number for the "raid_battle_winning_score" field.</summary>
    public const int RaidBattleWinningScoreFieldNumber = 6;
    private int raidBattleWinningScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RaidBattleWinningScore {
      get { return raidBattleWinningScore_; }
      set {
        raidBattleWinningScore_ = value;
      }
    }

    /// <summary>Field number for the "lose_all_battles_score" field.</summary>
    public const int LoseAllBattlesScoreFieldNumber = 7;
    private int loseAllBattlesScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoseAllBattlesScore {
      get { return loseAllBattlesScore_; }
      set {
        loseAllBattlesScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GymBadgeGmtSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GymBadgeGmtSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!target_.Equals(other.target_)) return false;
      if (BattleWinningScorePerDefenderCp != other.BattleWinningScorePerDefenderCp) return false;
      if (GymDefendingScorePerMinute != other.GymDefendingScorePerMinute) return false;
      if (BerryFeedingScore != other.BerryFeedingScore) return false;
      if (PokemonDeployScore != other.PokemonDeployScore) return false;
      if (RaidBattleWinningScore != other.RaidBattleWinningScore) return false;
      if (LoseAllBattlesScore != other.LoseAllBattlesScore) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= target_.GetHashCode();
      if (BattleWinningScorePerDefenderCp != 0F) hash ^= BattleWinningScorePerDefenderCp.GetHashCode();
      if (GymDefendingScorePerMinute != 0F) hash ^= GymDefendingScorePerMinute.GetHashCode();
      if (BerryFeedingScore != 0) hash ^= BerryFeedingScore.GetHashCode();
      if (PokemonDeployScore != 0) hash ^= PokemonDeployScore.GetHashCode();
      if (RaidBattleWinningScore != 0) hash ^= RaidBattleWinningScore.GetHashCode();
      if (LoseAllBattlesScore != 0) hash ^= LoseAllBattlesScore.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      target_.WriteTo(output, _repeated_target_codec);
      if (BattleWinningScorePerDefenderCp != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(BattleWinningScorePerDefenderCp);
      }
      if (GymDefendingScorePerMinute != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(GymDefendingScorePerMinute);
      }
      if (BerryFeedingScore != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BerryFeedingScore);
      }
      if (PokemonDeployScore != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PokemonDeployScore);
      }
      if (RaidBattleWinningScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(RaidBattleWinningScore);
      }
      if (LoseAllBattlesScore != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LoseAllBattlesScore);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += target_.CalculateSize(_repeated_target_codec);
      if (BattleWinningScorePerDefenderCp != 0F) {
        size += 1 + 4;
      }
      if (GymDefendingScorePerMinute != 0F) {
        size += 1 + 4;
      }
      if (BerryFeedingScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BerryFeedingScore);
      }
      if (PokemonDeployScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PokemonDeployScore);
      }
      if (RaidBattleWinningScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RaidBattleWinningScore);
      }
      if (LoseAllBattlesScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoseAllBattlesScore);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GymBadgeGmtSettings other) {
      if (other == null) {
        return;
      }
      target_.Add(other.target_);
      if (other.BattleWinningScorePerDefenderCp != 0F) {
        BattleWinningScorePerDefenderCp = other.BattleWinningScorePerDefenderCp;
      }
      if (other.GymDefendingScorePerMinute != 0F) {
        GymDefendingScorePerMinute = other.GymDefendingScorePerMinute;
      }
      if (other.BerryFeedingScore != 0) {
        BerryFeedingScore = other.BerryFeedingScore;
      }
      if (other.PokemonDeployScore != 0) {
        PokemonDeployScore = other.PokemonDeployScore;
      }
      if (other.RaidBattleWinningScore != 0) {
        RaidBattleWinningScore = other.RaidBattleWinningScore;
      }
      if (other.LoseAllBattlesScore != 0) {
        LoseAllBattlesScore = other.LoseAllBattlesScore;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            target_.AddEntriesFrom(input, _repeated_target_codec);
            break;
          }
          case 21: {
            BattleWinningScorePerDefenderCp = input.ReadFloat();
            break;
          }
          case 29: {
            GymDefendingScorePerMinute = input.ReadFloat();
            break;
          }
          case 32: {
            BerryFeedingScore = input.ReadInt32();
            break;
          }
          case 40: {
            PokemonDeployScore = input.ReadInt32();
            break;
          }
          case 48: {
            RaidBattleWinningScore = input.ReadInt32();
            break;
          }
          case 56: {
            LoseAllBattlesScore = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
