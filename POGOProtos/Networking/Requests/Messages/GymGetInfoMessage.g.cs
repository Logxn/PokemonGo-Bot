// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/GymGetInfoMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Requests/Messages/GymGetInfoMessage.proto</summary>
  public static partial class GymGetInfoMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Requests/Messages/GymGetInfoMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GymGetInfoMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9QT0dPUHJvdG9zL05ldHdvcmtpbmcvUmVxdWVzdHMvTWVzc2FnZXMvR3lt",
            "R2V0SW5mb01lc3NhZ2UucHJvdG8SJ1BPR09Qcm90b3MuTmV0d29ya2luZy5S",
            "ZXF1ZXN0cy5NZXNzYWdlcyKNAQoRR3ltR2V0SW5mb01lc3NhZ2USDgoGZ3lt",
            "X2lkGAEgASgJEhoKEnBsYXllcl9sYXRfZGVncmVlcxgCIAEoARIaChJwbGF5",
            "ZXJfbG5nX2RlZ3JlZXMYAyABKAESFwoPZ3ltX2xhdF9kZWdyZWVzGAQgASgB",
            "EhcKD2d5bV9sbmdfZGVncmVlcxgFIAEoAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Requests.Messages.GymGetInfoMessage), global::POGOProtos.Networking.Requests.Messages.GymGetInfoMessage.Parser, new[]{ "GymId", "PlayerLatDegrees", "PlayerLngDegrees", "GymLatDegrees", "GymLngDegrees" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GymGetInfoMessage : pb::IMessage<GymGetInfoMessage> {
    private static readonly pb::MessageParser<GymGetInfoMessage> _parser = new pb::MessageParser<GymGetInfoMessage>(() => new GymGetInfoMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GymGetInfoMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Requests.Messages.GymGetInfoMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymGetInfoMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymGetInfoMessage(GymGetInfoMessage other) : this() {
      gymId_ = other.gymId_;
      playerLatDegrees_ = other.playerLatDegrees_;
      playerLngDegrees_ = other.playerLngDegrees_;
      gymLatDegrees_ = other.gymLatDegrees_;
      gymLngDegrees_ = other.gymLngDegrees_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymGetInfoMessage Clone() {
      return new GymGetInfoMessage(this);
    }

    /// <summary>Field number for the "gym_id" field.</summary>
    public const int GymIdFieldNumber = 1;
    private string gymId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GymId {
      get { return gymId_; }
      set {
        gymId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_lat_degrees" field.</summary>
    public const int PlayerLatDegreesFieldNumber = 2;
    private double playerLatDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PlayerLatDegrees {
      get { return playerLatDegrees_; }
      set {
        playerLatDegrees_ = value;
      }
    }

    /// <summary>Field number for the "player_lng_degrees" field.</summary>
    public const int PlayerLngDegreesFieldNumber = 3;
    private double playerLngDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PlayerLngDegrees {
      get { return playerLngDegrees_; }
      set {
        playerLngDegrees_ = value;
      }
    }

    /// <summary>Field number for the "gym_lat_degrees" field.</summary>
    public const int GymLatDegreesFieldNumber = 4;
    private double gymLatDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GymLatDegrees {
      get { return gymLatDegrees_; }
      set {
        gymLatDegrees_ = value;
      }
    }

    /// <summary>Field number for the "gym_lng_degrees" field.</summary>
    public const int GymLngDegreesFieldNumber = 5;
    private double gymLngDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GymLngDegrees {
      get { return gymLngDegrees_; }
      set {
        gymLngDegrees_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GymGetInfoMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GymGetInfoMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GymId != other.GymId) return false;
      if (PlayerLatDegrees != other.PlayerLatDegrees) return false;
      if (PlayerLngDegrees != other.PlayerLngDegrees) return false;
      if (GymLatDegrees != other.GymLatDegrees) return false;
      if (GymLngDegrees != other.GymLngDegrees) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GymId.Length != 0) hash ^= GymId.GetHashCode();
      if (PlayerLatDegrees != 0D) hash ^= PlayerLatDegrees.GetHashCode();
      if (PlayerLngDegrees != 0D) hash ^= PlayerLngDegrees.GetHashCode();
      if (GymLatDegrees != 0D) hash ^= GymLatDegrees.GetHashCode();
      if (GymLngDegrees != 0D) hash ^= GymLngDegrees.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GymId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GymId);
      }
      if (PlayerLatDegrees != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(PlayerLatDegrees);
      }
      if (PlayerLngDegrees != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PlayerLngDegrees);
      }
      if (GymLatDegrees != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(GymLatDegrees);
      }
      if (GymLngDegrees != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(GymLngDegrees);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GymId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GymId);
      }
      if (PlayerLatDegrees != 0D) {
        size += 1 + 8;
      }
      if (PlayerLngDegrees != 0D) {
        size += 1 + 8;
      }
      if (GymLatDegrees != 0D) {
        size += 1 + 8;
      }
      if (GymLngDegrees != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GymGetInfoMessage other) {
      if (other == null) {
        return;
      }
      if (other.GymId.Length != 0) {
        GymId = other.GymId;
      }
      if (other.PlayerLatDegrees != 0D) {
        PlayerLatDegrees = other.PlayerLatDegrees;
      }
      if (other.PlayerLngDegrees != 0D) {
        PlayerLngDegrees = other.PlayerLngDegrees;
      }
      if (other.GymLatDegrees != 0D) {
        GymLatDegrees = other.GymLatDegrees;
      }
      if (other.GymLngDegrees != 0D) {
        GymLngDegrees = other.GymLngDegrees;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GymId = input.ReadString();
            break;
          }
          case 17: {
            PlayerLatDegrees = input.ReadDouble();
            break;
          }
          case 25: {
            PlayerLngDegrees = input.ReadDouble();
            break;
          }
          case 33: {
            GymLatDegrees = input.ReadDouble();
            break;
          }
          case 41: {
            GymLngDegrees = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
