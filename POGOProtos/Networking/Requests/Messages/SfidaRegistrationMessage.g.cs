// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/SfidaRegistrationMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Requests/Messages/SfidaRegistrationMessage.proto</summary>
  public static partial class SfidaRegistrationMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Requests/Messages/SfidaRegistrationMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SfidaRegistrationMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkZQT0dPUHJvdG9zL05ldHdvcmtpbmcvUmVxdWVzdHMvTWVzc2FnZXMvU2Zp",
            "ZGFSZWdpc3RyYXRpb25NZXNzYWdlLnByb3RvEidQT0dPUHJvdG9zLk5ldHdv",
            "cmtpbmcuUmVxdWVzdHMuTWVzc2FnZXMiLAoYU2ZpZGFSZWdpc3RyYXRpb25N",
            "ZXNzYWdlEhAKCHNmaWRhX2lkGAEgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Requests.Messages.SfidaRegistrationMessage), global::POGOProtos.Networking.Requests.Messages.SfidaRegistrationMessage.Parser, new[]{ "SfidaId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SfidaRegistrationMessage : pb::IMessage<SfidaRegistrationMessage> {
    private static readonly pb::MessageParser<SfidaRegistrationMessage> _parser = new pb::MessageParser<SfidaRegistrationMessage>(() => new SfidaRegistrationMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SfidaRegistrationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Requests.Messages.SfidaRegistrationMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SfidaRegistrationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SfidaRegistrationMessage(SfidaRegistrationMessage other) : this() {
      sfidaId_ = other.sfidaId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SfidaRegistrationMessage Clone() {
      return new SfidaRegistrationMessage(this);
    }

    /// <summary>Field number for the "sfida_id" field.</summary>
    public const int SfidaIdFieldNumber = 1;
    private string sfidaId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SfidaId {
      get { return sfidaId_; }
      set {
        sfidaId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SfidaRegistrationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SfidaRegistrationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SfidaId != other.SfidaId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SfidaId.Length != 0) hash ^= SfidaId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SfidaId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SfidaId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SfidaId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SfidaId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SfidaRegistrationMessage other) {
      if (other == null) {
        return;
      }
      if (other.SfidaId.Length != 0) {
        SfidaId = other.SfidaId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SfidaId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
