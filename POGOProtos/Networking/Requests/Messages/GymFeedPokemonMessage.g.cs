// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/GymFeedPokemonMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Requests/Messages/GymFeedPokemonMessage.proto</summary>
  public static partial class GymFeedPokemonMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Requests/Messages/GymFeedPokemonMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GymFeedPokemonMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkNQT0dPUHJvdG9zL05ldHdvcmtpbmcvUmVxdWVzdHMvTWVzc2FnZXMvR3lt",
            "RmVlZFBva2Vtb25NZXNzYWdlLnByb3RvEidQT0dPUHJvdG9zLk5ldHdvcmtp",
            "bmcuUmVxdWVzdHMuTWVzc2FnZXMaJlBPR09Qcm90b3MvSW52ZW50b3J5L0l0",
            "ZW0vSXRlbUlkLnByb3RvIr8BChVHeW1GZWVkUG9rZW1vbk1lc3NhZ2USLwoE",
            "aXRlbRgBIAEoDjIhLlBPR09Qcm90b3MuSW52ZW50b3J5Lkl0ZW0uSXRlbUlk",
            "EhkKEXN0YXJ0aW5nX3F1YW50aXR5GAIgASgFEg4KBmd5bV9pZBgDIAEoCRIS",
            "Cgpwb2tlbW9uX2lkGAQgASgGEhoKEnBsYXllcl9sYXRfZGVncmVlcxgFIAEo",
            "ARIaChJwbGF5ZXJfbG5nX2RlZ3JlZXMYBiABKAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Inventory.Item.ItemIdReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Requests.Messages.GymFeedPokemonMessage), global::POGOProtos.Networking.Requests.Messages.GymFeedPokemonMessage.Parser, new[]{ "Item", "StartingQuantity", "GymId", "PokemonId", "PlayerLatDegrees", "PlayerLngDegrees" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GymFeedPokemonMessage : pb::IMessage<GymFeedPokemonMessage> {
    private static readonly pb::MessageParser<GymFeedPokemonMessage> _parser = new pb::MessageParser<GymFeedPokemonMessage>(() => new GymFeedPokemonMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GymFeedPokemonMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Requests.Messages.GymFeedPokemonMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymFeedPokemonMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymFeedPokemonMessage(GymFeedPokemonMessage other) : this() {
      item_ = other.item_;
      startingQuantity_ = other.startingQuantity_;
      gymId_ = other.gymId_;
      pokemonId_ = other.pokemonId_;
      playerLatDegrees_ = other.playerLatDegrees_;
      playerLngDegrees_ = other.playerLngDegrees_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GymFeedPokemonMessage Clone() {
      return new GymFeedPokemonMessage(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::POGOProtos.Inventory.Item.ItemId item_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.Item.ItemId Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "starting_quantity" field.</summary>
    public const int StartingQuantityFieldNumber = 2;
    private int startingQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartingQuantity {
      get { return startingQuantity_; }
      set {
        startingQuantity_ = value;
      }
    }

    /// <summary>Field number for the "gym_id" field.</summary>
    public const int GymIdFieldNumber = 3;
    private string gymId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GymId {
      get { return gymId_; }
      set {
        gymId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pokemon_id" field.</summary>
    public const int PokemonIdFieldNumber = 4;
    private ulong pokemonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PokemonId {
      get { return pokemonId_; }
      set {
        pokemonId_ = value;
      }
    }

    /// <summary>Field number for the "player_lat_degrees" field.</summary>
    public const int PlayerLatDegreesFieldNumber = 5;
    private double playerLatDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PlayerLatDegrees {
      get { return playerLatDegrees_; }
      set {
        playerLatDegrees_ = value;
      }
    }

    /// <summary>Field number for the "player_lng_degrees" field.</summary>
    public const int PlayerLngDegreesFieldNumber = 6;
    private double playerLngDegrees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PlayerLngDegrees {
      get { return playerLngDegrees_; }
      set {
        playerLngDegrees_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GymFeedPokemonMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GymFeedPokemonMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Item != other.Item) return false;
      if (StartingQuantity != other.StartingQuantity) return false;
      if (GymId != other.GymId) return false;
      if (PokemonId != other.PokemonId) return false;
      if (PlayerLatDegrees != other.PlayerLatDegrees) return false;
      if (PlayerLngDegrees != other.PlayerLngDegrees) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Item != 0) hash ^= Item.GetHashCode();
      if (StartingQuantity != 0) hash ^= StartingQuantity.GetHashCode();
      if (GymId.Length != 0) hash ^= GymId.GetHashCode();
      if (PokemonId != 0UL) hash ^= PokemonId.GetHashCode();
      if (PlayerLatDegrees != 0D) hash ^= PlayerLatDegrees.GetHashCode();
      if (PlayerLngDegrees != 0D) hash ^= PlayerLngDegrees.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Item != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Item);
      }
      if (StartingQuantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StartingQuantity);
      }
      if (GymId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GymId);
      }
      if (PokemonId != 0UL) {
        output.WriteRawTag(33);
        output.WriteFixed64(PokemonId);
      }
      if (PlayerLatDegrees != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(PlayerLatDegrees);
      }
      if (PlayerLngDegrees != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(PlayerLngDegrees);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Item);
      }
      if (StartingQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartingQuantity);
      }
      if (GymId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GymId);
      }
      if (PokemonId != 0UL) {
        size += 1 + 8;
      }
      if (PlayerLatDegrees != 0D) {
        size += 1 + 8;
      }
      if (PlayerLngDegrees != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GymFeedPokemonMessage other) {
      if (other == null) {
        return;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.StartingQuantity != 0) {
        StartingQuantity = other.StartingQuantity;
      }
      if (other.GymId.Length != 0) {
        GymId = other.GymId;
      }
      if (other.PokemonId != 0UL) {
        PokemonId = other.PokemonId;
      }
      if (other.PlayerLatDegrees != 0D) {
        PlayerLatDegrees = other.PlayerLatDegrees;
      }
      if (other.PlayerLngDegrees != 0D) {
        PlayerLngDegrees = other.PlayerLngDegrees;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            item_ = (global::POGOProtos.Inventory.Item.ItemId) input.ReadEnum();
            break;
          }
          case 16: {
            StartingQuantity = input.ReadInt32();
            break;
          }
          case 26: {
            GymId = input.ReadString();
            break;
          }
          case 33: {
            PokemonId = input.ReadFixed64();
            break;
          }
          case 41: {
            PlayerLatDegrees = input.ReadDouble();
            break;
          }
          case 49: {
            PlayerLngDegrees = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
