// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Responses {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto</summary>
  public static partial class DownloadItemTemplatesResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DownloadItemTemplatesResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkNQT0dPUHJvdG9zL05ldHdvcmtpbmcvUmVzcG9uc2VzL0Rvd25sb2FkSXRl",
            "bVRlbXBsYXRlc1Jlc3BvbnNlLnByb3RvEh9QT0dPUHJvdG9zLk5ldHdvcmtp",
            "bmcuUmVzcG9uc2VzGjxQT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9BdmF0",
            "YXJDdXN0b21pemF0aW9uU2V0dGluZ3MucHJvdG8aLlBPR09Qcm90b3MvU2V0",
            "dGluZ3MvTWFzdGVyL0JhZGdlU2V0dGluZ3MucHJvdG8aL1BPR09Qcm90b3Mv",
            "U2V0dGluZ3MvTWFzdGVyL0NhbWVyYVNldHRpbmdzLnByb3RvGjJQT0dPUHJv",
            "dG9zL1NldHRpbmdzL01hc3Rlci9FbmNvdW50ZXJTZXR0aW5ncy5wcm90bxo2",
            "UE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0ZXIvRXF1aXBwZWRCYWRnZVNldHRp",
            "bmdzLnByb3RvGi1QT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9Gb3JtU2V0",
            "dGluZ3MucHJvdG8aMlBPR09Qcm90b3MvU2V0dGluZ3MvTWFzdGVyL0d5bUJh",
            "dHRsZVNldHRpbmdzLnByb3RvGjFQT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rl",
            "ci9HeW1MZXZlbFNldHRpbmdzLnByb3RvGi9QT0dPUHJvdG9zL1NldHRpbmdz",
            "L01hc3Rlci9JYXBJdGVtRGlzcGxheS5wcm90bxosUE9HT1Byb3Rvcy9TZXR0",
            "aW5ncy9NYXN0ZXIvSWFwU2V0dGluZ3MucHJvdG8aLVBPR09Qcm90b3MvU2V0",
            "dGluZ3MvTWFzdGVyL0l0ZW1TZXR0aW5ncy5wcm90bxo1UE9HT1Byb3Rvcy9T",
            "ZXR0aW5ncy9NYXN0ZXIvTW92ZVNlcXVlbmNlU2V0dGluZ3MucHJvdG8aLVBP",
            "R09Qcm90b3MvU2V0dGluZ3MvTWFzdGVyL01vdmVTZXR0aW5ncy5wcm90bxo0",
            "UE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0ZXIvUGxheWVyTGV2ZWxTZXR0aW5n",
            "cy5wcm90bxowUE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0ZXIvUG9rZW1vblNl",
            "dHRpbmdzLnByb3RvGjdQT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9Qb2tl",
            "bW9uVXBncmFkZVNldHRpbmdzLnByb3RvGi5QT0dPUHJvdG9zL1NldHRpbmdz",
            "L01hc3Rlci9RdWVzdFNldHRpbmdzLnByb3RvGjZQT0dPUHJvdG9zL1NldHRp",
            "bmdzL01hc3Rlci9UeXBlRWZmZWN0aXZlU2V0dGluZ3MucHJvdG8i3QwKHURv",
            "d25sb2FkSXRlbVRlbXBsYXRlc1Jlc3BvbnNlElUKBnJlc3VsdBgBIAEoDjJF",
            "LlBPR09Qcm90b3MuTmV0d29ya2luZy5SZXNwb25zZXMuRG93bmxvYWRJdGVt",
            "VGVtcGxhdGVzUmVzcG9uc2UuUmVzdWx0EmMKDml0ZW1fdGVtcGxhdGVzGAIg",
            "AygLMksuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNlcy5Eb3dubG9h",
            "ZEl0ZW1UZW1wbGF0ZXNSZXNwb25zZS5JdGVtVGVtcGxhdGUSFAoMdGltZXN0",
            "YW1wX21zGAMgASgEEhMKC3BhZ2Vfb2Zmc2V0GAQgASgFGp0KCgxJdGVtVGVt",
            "cGxhdGUSEwoLdGVtcGxhdGVfaWQYASABKAkSRQoQcG9rZW1vbl9zZXR0aW5n",
            "cxgCIAEoCzIrLlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLlBva2Vtb25T",
            "ZXR0aW5ncxI/Cg1pdGVtX3NldHRpbmdzGAMgASgLMiguUE9HT1Byb3Rvcy5T",
            "ZXR0aW5ncy5NYXN0ZXIuSXRlbVNldHRpbmdzEj8KDW1vdmVfc2V0dGluZ3MY",
            "BCABKAsyKC5QT0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rlci5Nb3ZlU2V0dGlu",
            "Z3MSUAoWbW92ZV9zZXF1ZW5jZV9zZXR0aW5ncxgFIAEoCzIwLlBPR09Qcm90",
            "b3MuU2V0dGluZ3MuTWFzdGVyLk1vdmVTZXF1ZW5jZVNldHRpbmdzEkkKDnR5",
            "cGVfZWZmZWN0aXZlGAggASgLMjEuUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0",
            "ZXIuVHlwZUVmZmVjdGl2ZVNldHRpbmdzEkEKDmJhZGdlX3NldHRpbmdzGAog",
            "ASgLMikuUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0ZXIuQmFkZ2VTZXR0aW5n",
            "cxI6CgZjYW1lcmEYCyABKAsyKi5QT0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rl",
            "ci5DYW1lcmFTZXR0aW5ncxJFCgxwbGF5ZXJfbGV2ZWwYDCABKAsyLy5QT0dP",
            "UHJvdG9zLlNldHRpbmdzLk1hc3Rlci5QbGF5ZXJMZXZlbFNldHRpbmdzEj8K",
            "CWd5bV9sZXZlbBgNIAEoCzIsLlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVy",
            "Lkd5bUxldmVsU2V0dGluZ3MSRgoPYmF0dGxlX3NldHRpbmdzGA4gASgLMi0u",
            "UE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0ZXIuR3ltQmF0dGxlU2V0dGluZ3MS",
            "SQoSZW5jb3VudGVyX3NldHRpbmdzGA8gASgLMi0uUE9HT1Byb3Rvcy5TZXR0",
            "aW5ncy5NYXN0ZXIuRW5jb3VudGVyU2V0dGluZ3MSRAoQaWFwX2l0ZW1fZGlz",
            "cGxheRgQIAEoCzIqLlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLklhcEl0",
            "ZW1EaXNwbGF5Ej0KDGlhcF9zZXR0aW5ncxgRIAEoCzInLlBPR09Qcm90b3Mu",
            "U2V0dGluZ3MuTWFzdGVyLklhcFNldHRpbmdzEkwKEHBva2Vtb25fdXBncmFk",
            "ZXMYEiABKAsyMi5QT0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rlci5Qb2tlbW9u",
            "VXBncmFkZVNldHRpbmdzEkoKD2VxdWlwcGVkX2JhZGdlcxgTIAEoCzIxLlBP",
            "R09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLkVxdWlwcGVkQmFkZ2VTZXR0aW5n",
            "cxJBCg5xdWVzdF9zZXR0aW5ncxgUIAEoCzIpLlBPR09Qcm90b3MuU2V0dGlu",
            "Z3MuTWFzdGVyLlF1ZXN0U2V0dGluZ3MSVQoUYXZhdGFyX2N1c3RvbWl6YXRp",
            "b24YFSABKAsyNy5QT0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rlci5BdmF0YXJD",
            "dXN0b21pemF0aW9uU2V0dGluZ3MSPwoNZm9ybV9zZXR0aW5ncxgWIAEoCzIo",
            "LlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLkZvcm1TZXR0aW5ncyI1CgZS",
            "ZXN1bHQSCQoFVU5TRVQQABILCgdTVUNDRVNTEAESCAoEUEFHRRACEgkKBVJF",
            "VFJZEANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Settings.Master.AvatarCustomizationSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.BadgeSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.CameraSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.EncounterSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.EquippedBadgeSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.FormSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.GymBattleSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.GymLevelSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.IapItemDisplayReflection.Descriptor, global::POGOProtos.Settings.Master.IapSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.ItemSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.MoveSequenceSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.MoveSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.PlayerLevelSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.PokemonSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.PokemonUpgradeSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.QuestSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.TypeEffectiveSettingsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse), global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Parser, new[]{ "Result", "ItemTemplates", "TimestampMs", "PageOffset" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.Result) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate), global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate.Parser, new[]{ "TemplateId", "PokemonSettings", "ItemSettings", "MoveSettings", "MoveSequenceSettings", "TypeEffective", "BadgeSettings", "Camera", "PlayerLevel", "GymLevel", "BattleSettings", "EncounterSettings", "IapItemDisplay", "IapSettings", "PokemonUpgrades", "EquippedBadges", "QuestSettings", "AvatarCustomization", "FormSettings" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DownloadItemTemplatesResponse : pb::IMessage<DownloadItemTemplatesResponse> {
    private static readonly pb::MessageParser<DownloadItemTemplatesResponse> _parser = new pb::MessageParser<DownloadItemTemplatesResponse>(() => new DownloadItemTemplatesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadItemTemplatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadItemTemplatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadItemTemplatesResponse(DownloadItemTemplatesResponse other) : this() {
      result_ = other.result_;
      itemTemplates_ = other.itemTemplates_.Clone();
      timestampMs_ = other.timestampMs_;
      pageOffset_ = other.pageOffset_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadItemTemplatesResponse Clone() {
      return new DownloadItemTemplatesResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "item_templates" field.</summary>
    public const int ItemTemplatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> _repeated_itemTemplates_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> itemTemplates_ = new pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> ItemTemplates {
      get { return itemTemplates_; }
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 3;
    private ulong timestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    /// <summary>Field number for the "page_offset" field.</summary>
    public const int PageOffsetFieldNumber = 4;
    private int pageOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageOffset {
      get { return pageOffset_; }
      set {
        pageOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadItemTemplatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadItemTemplatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!itemTemplates_.Equals(other.itemTemplates_)) return false;
      if (TimestampMs != other.TimestampMs) return false;
      if (PageOffset != other.PageOffset) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= itemTemplates_.GetHashCode();
      if (TimestampMs != 0UL) hash ^= TimestampMs.GetHashCode();
      if (PageOffset != 0) hash ^= PageOffset.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      itemTemplates_.WriteTo(output, _repeated_itemTemplates_codec);
      if (TimestampMs != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimestampMs);
      }
      if (PageOffset != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PageOffset);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += itemTemplates_.CalculateSize(_repeated_itemTemplates_codec);
      if (TimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimestampMs);
      }
      if (PageOffset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageOffset);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadItemTemplatesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      itemTemplates_.Add(other.itemTemplates_);
      if (other.TimestampMs != 0UL) {
        TimestampMs = other.TimestampMs;
      }
      if (other.PageOffset != 0) {
        PageOffset = other.PageOffset;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            itemTemplates_.AddEntriesFrom(input, _repeated_itemTemplates_codec);
            break;
          }
          case 24: {
            TimestampMs = input.ReadUInt64();
            break;
          }
          case 32: {
            PageOffset = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DownloadItemTemplatesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("PAGE")] Page = 2,
        [pbr::OriginalName("RETRY")] Retry = 3,
      }

      public sealed partial class ItemTemplate : pb::IMessage<ItemTemplate> {
        private static readonly pb::MessageParser<ItemTemplate> _parser = new pb::MessageParser<ItemTemplate>(() => new ItemTemplate());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ItemTemplate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemTemplate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemTemplate(ItemTemplate other) : this() {
          templateId_ = other.templateId_;
          PokemonSettings = other.pokemonSettings_ != null ? other.PokemonSettings.Clone() : null;
          ItemSettings = other.itemSettings_ != null ? other.ItemSettings.Clone() : null;
          MoveSettings = other.moveSettings_ != null ? other.MoveSettings.Clone() : null;
          MoveSequenceSettings = other.moveSequenceSettings_ != null ? other.MoveSequenceSettings.Clone() : null;
          TypeEffective = other.typeEffective_ != null ? other.TypeEffective.Clone() : null;
          BadgeSettings = other.badgeSettings_ != null ? other.BadgeSettings.Clone() : null;
          Camera = other.camera_ != null ? other.Camera.Clone() : null;
          PlayerLevel = other.playerLevel_ != null ? other.PlayerLevel.Clone() : null;
          GymLevel = other.gymLevel_ != null ? other.GymLevel.Clone() : null;
          BattleSettings = other.battleSettings_ != null ? other.BattleSettings.Clone() : null;
          EncounterSettings = other.encounterSettings_ != null ? other.EncounterSettings.Clone() : null;
          IapItemDisplay = other.iapItemDisplay_ != null ? other.IapItemDisplay.Clone() : null;
          IapSettings = other.iapSettings_ != null ? other.IapSettings.Clone() : null;
          PokemonUpgrades = other.pokemonUpgrades_ != null ? other.PokemonUpgrades.Clone() : null;
          EquippedBadges = other.equippedBadges_ != null ? other.EquippedBadges.Clone() : null;
          QuestSettings = other.questSettings_ != null ? other.QuestSettings.Clone() : null;
          AvatarCustomization = other.avatarCustomization_ != null ? other.AvatarCustomization.Clone() : null;
          FormSettings = other.formSettings_ != null ? other.FormSettings.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemTemplate Clone() {
          return new ItemTemplate(this);
        }

        /// <summary>Field number for the "template_id" field.</summary>
        public const int TemplateIdFieldNumber = 1;
        private string templateId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TemplateId {
          get { return templateId_; }
          set {
            templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pokemon_settings" field.</summary>
        public const int PokemonSettingsFieldNumber = 2;
        private global::POGOProtos.Settings.Master.PokemonSettings pokemonSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.PokemonSettings PokemonSettings {
          get { return pokemonSettings_; }
          set {
            pokemonSettings_ = value;
          }
        }

        /// <summary>Field number for the "item_settings" field.</summary>
        public const int ItemSettingsFieldNumber = 3;
        private global::POGOProtos.Settings.Master.ItemSettings itemSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.ItemSettings ItemSettings {
          get { return itemSettings_; }
          set {
            itemSettings_ = value;
          }
        }

        /// <summary>Field number for the "move_settings" field.</summary>
        public const int MoveSettingsFieldNumber = 4;
        private global::POGOProtos.Settings.Master.MoveSettings moveSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.MoveSettings MoveSettings {
          get { return moveSettings_; }
          set {
            moveSettings_ = value;
          }
        }

        /// <summary>Field number for the "move_sequence_settings" field.</summary>
        public const int MoveSequenceSettingsFieldNumber = 5;
        private global::POGOProtos.Settings.Master.MoveSequenceSettings moveSequenceSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.MoveSequenceSettings MoveSequenceSettings {
          get { return moveSequenceSettings_; }
          set {
            moveSequenceSettings_ = value;
          }
        }

        /// <summary>Field number for the "type_effective" field.</summary>
        public const int TypeEffectiveFieldNumber = 8;
        private global::POGOProtos.Settings.Master.TypeEffectiveSettings typeEffective_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.TypeEffectiveSettings TypeEffective {
          get { return typeEffective_; }
          set {
            typeEffective_ = value;
          }
        }

        /// <summary>Field number for the "badge_settings" field.</summary>
        public const int BadgeSettingsFieldNumber = 10;
        private global::POGOProtos.Settings.Master.BadgeSettings badgeSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.BadgeSettings BadgeSettings {
          get { return badgeSettings_; }
          set {
            badgeSettings_ = value;
          }
        }

        /// <summary>Field number for the "camera" field.</summary>
        public const int CameraFieldNumber = 11;
        private global::POGOProtos.Settings.Master.CameraSettings camera_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.CameraSettings Camera {
          get { return camera_; }
          set {
            camera_ = value;
          }
        }

        /// <summary>Field number for the "player_level" field.</summary>
        public const int PlayerLevelFieldNumber = 12;
        private global::POGOProtos.Settings.Master.PlayerLevelSettings playerLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.PlayerLevelSettings PlayerLevel {
          get { return playerLevel_; }
          set {
            playerLevel_ = value;
          }
        }

        /// <summary>Field number for the "gym_level" field.</summary>
        public const int GymLevelFieldNumber = 13;
        private global::POGOProtos.Settings.Master.GymLevelSettings gymLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.GymLevelSettings GymLevel {
          get { return gymLevel_; }
          set {
            gymLevel_ = value;
          }
        }

        /// <summary>Field number for the "battle_settings" field.</summary>
        public const int BattleSettingsFieldNumber = 14;
        private global::POGOProtos.Settings.Master.GymBattleSettings battleSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.GymBattleSettings BattleSettings {
          get { return battleSettings_; }
          set {
            battleSettings_ = value;
          }
        }

        /// <summary>Field number for the "encounter_settings" field.</summary>
        public const int EncounterSettingsFieldNumber = 15;
        private global::POGOProtos.Settings.Master.EncounterSettings encounterSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.EncounterSettings EncounterSettings {
          get { return encounterSettings_; }
          set {
            encounterSettings_ = value;
          }
        }

        /// <summary>Field number for the "iap_item_display" field.</summary>
        public const int IapItemDisplayFieldNumber = 16;
        private global::POGOProtos.Settings.Master.IapItemDisplay iapItemDisplay_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.IapItemDisplay IapItemDisplay {
          get { return iapItemDisplay_; }
          set {
            iapItemDisplay_ = value;
          }
        }

        /// <summary>Field number for the "iap_settings" field.</summary>
        public const int IapSettingsFieldNumber = 17;
        private global::POGOProtos.Settings.Master.IapSettings iapSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.IapSettings IapSettings {
          get { return iapSettings_; }
          set {
            iapSettings_ = value;
          }
        }

        /// <summary>Field number for the "pokemon_upgrades" field.</summary>
        public const int PokemonUpgradesFieldNumber = 18;
        private global::POGOProtos.Settings.Master.PokemonUpgradeSettings pokemonUpgrades_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.PokemonUpgradeSettings PokemonUpgrades {
          get { return pokemonUpgrades_; }
          set {
            pokemonUpgrades_ = value;
          }
        }

        /// <summary>Field number for the "equipped_badges" field.</summary>
        public const int EquippedBadgesFieldNumber = 19;
        private global::POGOProtos.Settings.Master.EquippedBadgeSettings equippedBadges_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.EquippedBadgeSettings EquippedBadges {
          get { return equippedBadges_; }
          set {
            equippedBadges_ = value;
          }
        }

        /// <summary>Field number for the "quest_settings" field.</summary>
        public const int QuestSettingsFieldNumber = 20;
        private global::POGOProtos.Settings.Master.QuestSettings questSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.QuestSettings QuestSettings {
          get { return questSettings_; }
          set {
            questSettings_ = value;
          }
        }

        /// <summary>Field number for the "avatar_customization" field.</summary>
        public const int AvatarCustomizationFieldNumber = 21;
        private global::POGOProtos.Settings.Master.AvatarCustomizationSettings avatarCustomization_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.AvatarCustomizationSettings AvatarCustomization {
          get { return avatarCustomization_; }
          set {
            avatarCustomization_ = value;
          }
        }

        /// <summary>Field number for the "form_settings" field.</summary>
        public const int FormSettingsFieldNumber = 22;
        private global::POGOProtos.Settings.Master.FormSettings formSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.FormSettings FormSettings {
          get { return formSettings_; }
          set {
            formSettings_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ItemTemplate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ItemTemplate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TemplateId != other.TemplateId) return false;
          if (!object.Equals(PokemonSettings, other.PokemonSettings)) return false;
          if (!object.Equals(ItemSettings, other.ItemSettings)) return false;
          if (!object.Equals(MoveSettings, other.MoveSettings)) return false;
          if (!object.Equals(MoveSequenceSettings, other.MoveSequenceSettings)) return false;
          if (!object.Equals(TypeEffective, other.TypeEffective)) return false;
          if (!object.Equals(BadgeSettings, other.BadgeSettings)) return false;
          if (!object.Equals(Camera, other.Camera)) return false;
          if (!object.Equals(PlayerLevel, other.PlayerLevel)) return false;
          if (!object.Equals(GymLevel, other.GymLevel)) return false;
          if (!object.Equals(BattleSettings, other.BattleSettings)) return false;
          if (!object.Equals(EncounterSettings, other.EncounterSettings)) return false;
          if (!object.Equals(IapItemDisplay, other.IapItemDisplay)) return false;
          if (!object.Equals(IapSettings, other.IapSettings)) return false;
          if (!object.Equals(PokemonUpgrades, other.PokemonUpgrades)) return false;
          if (!object.Equals(EquippedBadges, other.EquippedBadges)) return false;
          if (!object.Equals(QuestSettings, other.QuestSettings)) return false;
          if (!object.Equals(AvatarCustomization, other.AvatarCustomization)) return false;
          if (!object.Equals(FormSettings, other.FormSettings)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
          if (pokemonSettings_ != null) hash ^= PokemonSettings.GetHashCode();
          if (itemSettings_ != null) hash ^= ItemSettings.GetHashCode();
          if (moveSettings_ != null) hash ^= MoveSettings.GetHashCode();
          if (moveSequenceSettings_ != null) hash ^= MoveSequenceSettings.GetHashCode();
          if (typeEffective_ != null) hash ^= TypeEffective.GetHashCode();
          if (badgeSettings_ != null) hash ^= BadgeSettings.GetHashCode();
          if (camera_ != null) hash ^= Camera.GetHashCode();
          if (playerLevel_ != null) hash ^= PlayerLevel.GetHashCode();
          if (gymLevel_ != null) hash ^= GymLevel.GetHashCode();
          if (battleSettings_ != null) hash ^= BattleSettings.GetHashCode();
          if (encounterSettings_ != null) hash ^= EncounterSettings.GetHashCode();
          if (iapItemDisplay_ != null) hash ^= IapItemDisplay.GetHashCode();
          if (iapSettings_ != null) hash ^= IapSettings.GetHashCode();
          if (pokemonUpgrades_ != null) hash ^= PokemonUpgrades.GetHashCode();
          if (equippedBadges_ != null) hash ^= EquippedBadges.GetHashCode();
          if (questSettings_ != null) hash ^= QuestSettings.GetHashCode();
          if (avatarCustomization_ != null) hash ^= AvatarCustomization.GetHashCode();
          if (formSettings_ != null) hash ^= FormSettings.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TemplateId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TemplateId);
          }
          if (pokemonSettings_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PokemonSettings);
          }
          if (itemSettings_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ItemSettings);
          }
          if (moveSettings_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(MoveSettings);
          }
          if (moveSequenceSettings_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(MoveSequenceSettings);
          }
          if (typeEffective_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(TypeEffective);
          }
          if (badgeSettings_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(BadgeSettings);
          }
          if (camera_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(Camera);
          }
          if (playerLevel_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(PlayerLevel);
          }
          if (gymLevel_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(GymLevel);
          }
          if (battleSettings_ != null) {
            output.WriteRawTag(114);
            output.WriteMessage(BattleSettings);
          }
          if (encounterSettings_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(EncounterSettings);
          }
          if (iapItemDisplay_ != null) {
            output.WriteRawTag(130, 1);
            output.WriteMessage(IapItemDisplay);
          }
          if (iapSettings_ != null) {
            output.WriteRawTag(138, 1);
            output.WriteMessage(IapSettings);
          }
          if (pokemonUpgrades_ != null) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(PokemonUpgrades);
          }
          if (equippedBadges_ != null) {
            output.WriteRawTag(154, 1);
            output.WriteMessage(EquippedBadges);
          }
          if (questSettings_ != null) {
            output.WriteRawTag(162, 1);
            output.WriteMessage(QuestSettings);
          }
          if (avatarCustomization_ != null) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(AvatarCustomization);
          }
          if (formSettings_ != null) {
            output.WriteRawTag(178, 1);
            output.WriteMessage(FormSettings);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TemplateId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
          }
          if (pokemonSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonSettings);
          }
          if (itemSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemSettings);
          }
          if (moveSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveSettings);
          }
          if (moveSequenceSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveSequenceSettings);
          }
          if (typeEffective_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeEffective);
          }
          if (badgeSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BadgeSettings);
          }
          if (camera_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Camera);
          }
          if (playerLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerLevel);
          }
          if (gymLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GymLevel);
          }
          if (battleSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleSettings);
          }
          if (encounterSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncounterSettings);
          }
          if (iapItemDisplay_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(IapItemDisplay);
          }
          if (iapSettings_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(IapSettings);
          }
          if (pokemonUpgrades_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(PokemonUpgrades);
          }
          if (equippedBadges_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(EquippedBadges);
          }
          if (questSettings_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(QuestSettings);
          }
          if (avatarCustomization_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(AvatarCustomization);
          }
          if (formSettings_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(FormSettings);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ItemTemplate other) {
          if (other == null) {
            return;
          }
          if (other.TemplateId.Length != 0) {
            TemplateId = other.TemplateId;
          }
          if (other.pokemonSettings_ != null) {
            if (pokemonSettings_ == null) {
              pokemonSettings_ = new global::POGOProtos.Settings.Master.PokemonSettings();
            }
            PokemonSettings.MergeFrom(other.PokemonSettings);
          }
          if (other.itemSettings_ != null) {
            if (itemSettings_ == null) {
              itemSettings_ = new global::POGOProtos.Settings.Master.ItemSettings();
            }
            ItemSettings.MergeFrom(other.ItemSettings);
          }
          if (other.moveSettings_ != null) {
            if (moveSettings_ == null) {
              moveSettings_ = new global::POGOProtos.Settings.Master.MoveSettings();
            }
            MoveSettings.MergeFrom(other.MoveSettings);
          }
          if (other.moveSequenceSettings_ != null) {
            if (moveSequenceSettings_ == null) {
              moveSequenceSettings_ = new global::POGOProtos.Settings.Master.MoveSequenceSettings();
            }
            MoveSequenceSettings.MergeFrom(other.MoveSequenceSettings);
          }
          if (other.typeEffective_ != null) {
            if (typeEffective_ == null) {
              typeEffective_ = new global::POGOProtos.Settings.Master.TypeEffectiveSettings();
            }
            TypeEffective.MergeFrom(other.TypeEffective);
          }
          if (other.badgeSettings_ != null) {
            if (badgeSettings_ == null) {
              badgeSettings_ = new global::POGOProtos.Settings.Master.BadgeSettings();
            }
            BadgeSettings.MergeFrom(other.BadgeSettings);
          }
          if (other.camera_ != null) {
            if (camera_ == null) {
              camera_ = new global::POGOProtos.Settings.Master.CameraSettings();
            }
            Camera.MergeFrom(other.Camera);
          }
          if (other.playerLevel_ != null) {
            if (playerLevel_ == null) {
              playerLevel_ = new global::POGOProtos.Settings.Master.PlayerLevelSettings();
            }
            PlayerLevel.MergeFrom(other.PlayerLevel);
          }
          if (other.gymLevel_ != null) {
            if (gymLevel_ == null) {
              gymLevel_ = new global::POGOProtos.Settings.Master.GymLevelSettings();
            }
            GymLevel.MergeFrom(other.GymLevel);
          }
          if (other.battleSettings_ != null) {
            if (battleSettings_ == null) {
              battleSettings_ = new global::POGOProtos.Settings.Master.GymBattleSettings();
            }
            BattleSettings.MergeFrom(other.BattleSettings);
          }
          if (other.encounterSettings_ != null) {
            if (encounterSettings_ == null) {
              encounterSettings_ = new global::POGOProtos.Settings.Master.EncounterSettings();
            }
            EncounterSettings.MergeFrom(other.EncounterSettings);
          }
          if (other.iapItemDisplay_ != null) {
            if (iapItemDisplay_ == null) {
              iapItemDisplay_ = new global::POGOProtos.Settings.Master.IapItemDisplay();
            }
            IapItemDisplay.MergeFrom(other.IapItemDisplay);
          }
          if (other.iapSettings_ != null) {
            if (iapSettings_ == null) {
              iapSettings_ = new global::POGOProtos.Settings.Master.IapSettings();
            }
            IapSettings.MergeFrom(other.IapSettings);
          }
          if (other.pokemonUpgrades_ != null) {
            if (pokemonUpgrades_ == null) {
              pokemonUpgrades_ = new global::POGOProtos.Settings.Master.PokemonUpgradeSettings();
            }
            PokemonUpgrades.MergeFrom(other.PokemonUpgrades);
          }
          if (other.equippedBadges_ != null) {
            if (equippedBadges_ == null) {
              equippedBadges_ = new global::POGOProtos.Settings.Master.EquippedBadgeSettings();
            }
            EquippedBadges.MergeFrom(other.EquippedBadges);
          }
          if (other.questSettings_ != null) {
            if (questSettings_ == null) {
              questSettings_ = new global::POGOProtos.Settings.Master.QuestSettings();
            }
            QuestSettings.MergeFrom(other.QuestSettings);
          }
          if (other.avatarCustomization_ != null) {
            if (avatarCustomization_ == null) {
              avatarCustomization_ = new global::POGOProtos.Settings.Master.AvatarCustomizationSettings();
            }
            AvatarCustomization.MergeFrom(other.AvatarCustomization);
          }
          if (other.formSettings_ != null) {
            if (formSettings_ == null) {
              formSettings_ = new global::POGOProtos.Settings.Master.FormSettings();
            }
            FormSettings.MergeFrom(other.FormSettings);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                TemplateId = input.ReadString();
                break;
              }
              case 18: {
                if (pokemonSettings_ == null) {
                  pokemonSettings_ = new global::POGOProtos.Settings.Master.PokemonSettings();
                }
                input.ReadMessage(pokemonSettings_);
                break;
              }
              case 26: {
                if (itemSettings_ == null) {
                  itemSettings_ = new global::POGOProtos.Settings.Master.ItemSettings();
                }
                input.ReadMessage(itemSettings_);
                break;
              }
              case 34: {
                if (moveSettings_ == null) {
                  moveSettings_ = new global::POGOProtos.Settings.Master.MoveSettings();
                }
                input.ReadMessage(moveSettings_);
                break;
              }
              case 42: {
                if (moveSequenceSettings_ == null) {
                  moveSequenceSettings_ = new global::POGOProtos.Settings.Master.MoveSequenceSettings();
                }
                input.ReadMessage(moveSequenceSettings_);
                break;
              }
              case 66: {
                if (typeEffective_ == null) {
                  typeEffective_ = new global::POGOProtos.Settings.Master.TypeEffectiveSettings();
                }
                input.ReadMessage(typeEffective_);
                break;
              }
              case 82: {
                if (badgeSettings_ == null) {
                  badgeSettings_ = new global::POGOProtos.Settings.Master.BadgeSettings();
                }
                input.ReadMessage(badgeSettings_);
                break;
              }
              case 90: {
                if (camera_ == null) {
                  camera_ = new global::POGOProtos.Settings.Master.CameraSettings();
                }
                input.ReadMessage(camera_);
                break;
              }
              case 98: {
                if (playerLevel_ == null) {
                  playerLevel_ = new global::POGOProtos.Settings.Master.PlayerLevelSettings();
                }
                input.ReadMessage(playerLevel_);
                break;
              }
              case 106: {
                if (gymLevel_ == null) {
                  gymLevel_ = new global::POGOProtos.Settings.Master.GymLevelSettings();
                }
                input.ReadMessage(gymLevel_);
                break;
              }
              case 114: {
                if (battleSettings_ == null) {
                  battleSettings_ = new global::POGOProtos.Settings.Master.GymBattleSettings();
                }
                input.ReadMessage(battleSettings_);
                break;
              }
              case 122: {
                if (encounterSettings_ == null) {
                  encounterSettings_ = new global::POGOProtos.Settings.Master.EncounterSettings();
                }
                input.ReadMessage(encounterSettings_);
                break;
              }
              case 130: {
                if (iapItemDisplay_ == null) {
                  iapItemDisplay_ = new global::POGOProtos.Settings.Master.IapItemDisplay();
                }
                input.ReadMessage(iapItemDisplay_);
                break;
              }
              case 138: {
                if (iapSettings_ == null) {
                  iapSettings_ = new global::POGOProtos.Settings.Master.IapSettings();
                }
                input.ReadMessage(iapSettings_);
                break;
              }
              case 146: {
                if (pokemonUpgrades_ == null) {
                  pokemonUpgrades_ = new global::POGOProtos.Settings.Master.PokemonUpgradeSettings();
                }
                input.ReadMessage(pokemonUpgrades_);
                break;
              }
              case 154: {
                if (equippedBadges_ == null) {
                  equippedBadges_ = new global::POGOProtos.Settings.Master.EquippedBadgeSettings();
                }
                input.ReadMessage(equippedBadges_);
                break;
              }
              case 162: {
                if (questSettings_ == null) {
                  questSettings_ = new global::POGOProtos.Settings.Master.QuestSettings();
                }
                input.ReadMessage(questSettings_);
                break;
              }
              case 170: {
                if (avatarCustomization_ == null) {
                  avatarCustomization_ = new global::POGOProtos.Settings.Master.AvatarCustomizationSettings();
                }
                input.ReadMessage(avatarCustomization_);
                break;
              }
              case 178: {
                if (formSettings_ == null) {
                  formSettings_ = new global::POGOProtos.Settings.Master.FormSettings();
                }
                input.ReadMessage(formSettings_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
